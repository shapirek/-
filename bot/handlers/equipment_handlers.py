import asyncio
import logging

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler

from bot.common import load_users_data_async
from bot.config import REQUEST_EQUIPMENT
from .env import CHANNEL_LINK_PART
from bot.services.send_messages.plea import send_plea_to_channel_async
from bot.services.formatters import format_message_with_signature_async
from bot.utils.keyboards.staff_menu import show_staff_menu

logger = logging.getLogger(__name__)


async def handle_request_equipment(
    update: Update,
    context: ContextTypes.DEFAULT_TYPE
) -> int:
    """
    –ù–∞—á–∏–Ω–∞–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π –∑–∞–ø—Ä–æ—Å–∞ —Ç–µ—Ö–Ω–∏–∫–∏: —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–µ—Ç–∞–ª–∏.
    """
    query = update.callback_query
    await query.answer()
    await query.edit_message_text(
        "–£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞, –∫–æ–≥–¥–∞ –∏ –∫—É–¥–∞ –µ—ë –ø—Ä–∏–Ω–µ—Å—Ç–∏:"
    )
    return REQUEST_EQUIPMENT


async def handle_equipment_input(
    update: Update,
    context: ContextTypes.DEFAULT_TYPE
) -> int:
    """
    –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ç–µ—Ö–Ω–∏–∫–∏, –ø—É–±–ª–∏–∫—É–µ–º –µ–≥–æ –≤ –∫–∞–Ω–∞–ª,
    –∞ –∑–∞—Ç–µ–º —Ä–∞—Å—Å—ã–ª–∞–µ–º –≤—Å–µ–º —Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä–∞–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–¥.
    """
    # 1) –ó–∞–≥—Ä—É–∑–∫–∞ users_data
    if 'users_data' not in context.bot_data:
        context.bot_data['users_data'] = await load_users_data_async()
    users = context.bot_data['users_data']

    # 2) –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    equipment_request = update.message.text
    context.user_data['equipment_request'] = equipment_request

    sender_code = str(context.user_data.get('code', ''))
    sender = next((u for u in users if str(u.get('–∫–æ–¥')) == sender_code), None)
    if not sender:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return ConversationHandler.END

    # 3) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º plea –≤ –∫–∞–Ω–∞–ª (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç {'message_id', 'thread_id'})
    channel_data = await send_plea_to_channel_async(
        context,
        message_text=equipment_request,
        sender_name=sender['–∏–º—è'],
        sender_surname=sender['—Ñ–∞–º–∏–ª–∏—è'],
        sender_status=sender['—Å—Ç–∞—Ç—É—Å'],
        recipient_type='equipment_request'
    )
    if not channel_data:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –∫–∞–Ω–∞–ª.")
        return ConversationHandler.END

    # 4) –°–æ–±–∏—Ä–∞–µ–º URL —Ç—Ä–µ–¥–∞
    thread_url = (
        f"https://t.me/c/{CHANNEL_LINK_PART}/"
        f"{channel_data['message_id']}?thread={channel_data['thread_id']}"
    )

    # 5) –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö —Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä–æ–≤
    tech_zonders = [u['id'] for u in users if u.get('—Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä') == '1']
    if not tech_zonders:
        await update.message.reply_text("‚ùå –ù–µ—Ç —Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!")
        return await show_staff_menu(update, context)

    # 6) –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    formatted = await format_message_with_signature_async(
        equipment_request,
        sender['–∏–º—è'],
        sender['—Ñ–∞–º–∏–ª–∏—è'],
        sender['—Å—Ç–∞—Ç—É—Å'],
        recipient_type='equipment_request'
    )
    reply_markup = InlineKeyboardMarkup([[
        InlineKeyboardButton("–ü–æ–¥—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Ö–Ω–æ–ø–ª–µ—á–æ ü¶æ", url=thread_url)
    ]])

    # 7) –†–∞—Å—Å—ã–ª–∫–∞ –ø–∞–∫–µ—Ç–∞–º–∏ –ø–æ 30/—Å–µ–∫
    send_tasks = [
        context.bot.send_message(chat_id=int(uid), text=formatted, reply_markup=reply_markup)
        for uid in tech_zonders
    ]
    for i in range(0, len(send_tasks), 30):
        await asyncio.gather(*send_tasks[i:i+30])
        if i + 30 < len(send_tasks):
            await asyncio.sleep(1)

    # 8) –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—Ö–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é
    await update.message.reply_text("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º —Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä–∞–º!")
    return await show_staff_menu(update, context)
