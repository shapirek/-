from telegram import Update
from telegram.ext import CallbackContext, ConversationHandler
import asyncio
from your_google_sheet_module import async_read_google_sheet


async def handle_duty_text_input(update: Update, context: CallbackContext) -> int:
    duty_text = update.message.text.strip()

    # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    if 'users_data' not in context.bot_data:
        try:
            context.bot_data['users_data'] = await async_read_google_sheet(TABULA)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return ConversationHandler.END

    users_data = context.bot_data['users_data']

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    sender = next((u for u in users_data if str(u['–∫–æ–¥']) == context.user_data.get('code')), None)
    if not sender:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return ConversationHandler.END

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∫–æ–ª—å–Ω–∏–∫–∞
    selected_student = context.user_data.get('selected_student')
    if not selected_student:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ —à–∫–æ–ª—å–Ω–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return ConversationHandler.END

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    message_text = (
        f"üö® –ù–ê–†–Ø–î üö®\n\n"
        f"–ö–û–ú–£: {selected_student['–∏–º—è']} {selected_student['—Ñ–∞–º–∏–ª–∏—è']} ({selected_student['–∫–æ–º–∞–Ω–¥–∞']})\n"
        f"–û–¢ –ö–û–ì–û: {sender['–∏–º—è']} {sender['—Ñ–∞–º–∏–ª–∏—è']} ({sender['–∫–æ–º–∞–Ω–¥–∞']})\n\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"{duty_text}"
    )

    # –ü–æ–ª—É—á–∞—Ç–µ–ª–∏ (–∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
    recipients = [user for user in users_data if user.get('–ø—Å–∏–Ω') == '1']
    if not recipients:
        await update.message.reply_text("‚ùå –ù–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ü–°–ò–ù.")
        return ConversationHandler.END

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
    send_tasks = [
        context.bot.send_message(chat_id=r['id'], text=message_text)
        for r in recipients
    ]
    
    results = await asyncio.gather(*send_tasks, return_exceptions=True)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏
    for r, result in zip(recipients, results):
        if isinstance(result, Exception):
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {r['id']}: {result}")

    await update.message.reply_text(f"‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω {len(recipients)} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –ü–°–ò–ù!")
    return await show_staff_menu(update, context)
