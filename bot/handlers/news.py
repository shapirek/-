def handle_news(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –ù–û–í–û–°–¢–ò —Å —É—á–µ—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞—Ç
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        if update.callback_query:
            query = update.callback_query
            message = query.message
            query.answer()  # –£–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏ —É –∫–Ω–æ–ø–∫–∏
        else:
            message = update.message

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        schedule_data = read_schedule_sheet(SCHEDULE_SHEET_URL)
        current_date = get_current_date()

        # –ü–æ–∏—Å–∫ –ø–æ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º –¥–∞—Ç–∞–º
        today_schedule = None
        for item in schedule_data:
            if '–¥–∞—Ç–∞' in item and normalize_table_date(item['–¥–∞—Ç–∞']) == current_date:
                today_schedule = item
                break

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        if not today_schedule:
            response_text = "üì≠ –ù–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç!"
            logger.warning(f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞—Ç—ã: {current_date}")
        else:
            response_text = format_schedule_message(today_schedule, schedule_data)
            logger.info(f"–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {current_date}")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
        if update.callback_query:
            context.bot.send_message(
                chat_id=message.chat_id,
                text=response_text,
                parse_mode='Markdown'
            )
        else:
            message.reply_text(response_text, parse_mode='Markdown')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_news: {str(e)}", exc_info=True)
        error_msg = "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        if update.callback_query:
            update.callback_query.answer(error_msg, show_alert=True)
        else:
            update.message.reply_text(error_msg)
