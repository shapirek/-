def handle_equipment_input(update: Update, context: CallbackContext) -> int:
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ context.user_data
    equipment_request = update.message.text
    context.user_data['equipment_request'] = equipment_request

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    sender = next((u for u in users_data if str(u['–∫–æ–¥']) == context.user_data.get('code')), None)
    if not sender:
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return ConversationHandler.END

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É –≤ –∫–∞–Ω–∞–ª
    send_plea_to_channel(context, equipment_request, sender['–∏–º—è'], sender['—Ñ–∞–º–∏–ª–∏—è'], sender['—Å—Ç–∞—Ç—É—Å'], recipient_type='equipment_request')

    # –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏ thread_id –∏–∑ context.user_data
    unique_id = context.user_data.get('current_message_id')
    message_data = context.user_data.get(unique_id, {})
    channel_message_id = message_data.get('channel_message_id')
    thread_id = message_data.get('thread_id')

    if not channel_message_id or not thread_id:
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Ç—Ä–µ–¥–∞.")
        return ConversationHandler.END

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–¥
    thread_url = f"https://t.me/c/{CHANNEL_LINK_PART}/{channel_message_id}?thread={thread_id}"

    print(f"[DEBUG] –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–¥: {thread_url}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä–æ–≤ (—É –∫–æ—Ç–æ—Ä—ã—Ö –≤ 9-–æ–π –∫–æ–ª–æ–Ω–∫–µ —Å—Ç–æ–∏—Ç 1)
    tech_zonders = [user['id'] for user in users_data if user.get('—Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä') == '1']

    if not tech_zonders:
        update.message.reply_text("‚ùå –ù–µ—Ç —Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!")
    else:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
        formatted_message = (
            f"üì¢ –ó–ê–ü–†–û–° –¢–ï–•–ù–ò–ö–ò üì¢\n\n"
            f"{equipment_request}\n\n"
            f"–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n"
            f"{sender['–∏–º—è']} {sender['—Ñ–∞–º–∏–ª–∏—è']}"
        )

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Ö–Ω–æ–ø–ª–µ—á–æ"
        keyboard = [
            [InlineKeyboardButton("–ü–æ–¥—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Ö–Ω–æ–ø–ª–µ—á–æ ü¶æ", url=thread_url)]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä–∞–º
        for user_id in tech_zonders:
            try:
                context.bot.send_message(
                    chat_id=user_id,
                    text=formatted_message,
                    reply_markup=reply_markup
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {user_id}: {e}")

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
        update.message.reply_text("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º —Ç–µ—Ö–Ω–æ–∑–æ–Ω–¥–µ—Ä–∞–º!")

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    return show_staff_menu(update, context)
